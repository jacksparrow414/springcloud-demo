server:
  port: 8084
  servlet:
    context-path: /clientTwo
  tomcat:
    connection-timeout: 5000
spring:
  main:
    allow-bean-definition-overriding: true
  application:
    name: demo-clientTwo
  datasource:
      url: jdbc:mysql://localhost:3306/dhb?useUnicode=true&characterEncoding=UTF-8
      username: root
      password: 12345
#  rabbitmq:
#    addresses: 127.0.0.1:5672
#    username: admin
#    password: admin
#  cloud:
#    alibaba:
#      seata:
#        tx-service-group: my_test_tx_group
eureka:
  instance:
    instance-id: ${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90
  client:
    service-url:
      defaultZone: http://localhost:8081/eureka/
    registry-fetch-interval-seconds: 15
# 这里配置的是微服务之间的调用超时时间
feign:
  client:
    config:
      default:
        connect-timeout: 4000
        read-timeout: 4000
  # 如果要测试fallbackfactory可以把这个注释放开，如果只想单纯的测试调用超时，可以把这个注释掉
  hystrix:
    enabled: true
#hystrix:
#  command:
#    default:
#      execution:
#        isolation:
#          thread:
#            timeoutInMilliseconds: 4000
#        connect-timeout: 8000
#        read-timeout: 8000

#阿里分布式事务配置
#seata:
#  service:
#    vgroup-mapping:
#      my_test_tx_group: seata-server
#    grouplist:
#      seata-server: 192.168.0.105:9091
#    enable-degrade: false
#    disable-global-transaction: false
mybatis-plus:
  mapper-locations: classpath*:/mapper/*.xml